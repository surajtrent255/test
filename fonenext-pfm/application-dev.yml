spring:
  jackson:
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  main:
    allow-bean-definition-overriding: true
  datasource:
    databaseDriverName: com.mysql.cj.jdbc.Driver
    maxPool: 25
    maxIdle: 10
    minIdle: 5
    url: jdbc:mysql://10.13.194.238:3311/fnxt_pfm_dev?useTimezone=true&serverTimezone=Asia/Kathmandu
    username: fonenxt
    password: f1s0ft@123
  servlet:
    multipart:
      max-file-size: 50MB
      # max-request-size: 50MB

  zipkin:
    baseUrl: http://dev-zipkin.fonenext-dev.10.13.194.202.nip.io/zipkin/
  # kafka:
  #   producer:
  #     bootstrap-servers: service-kafka:9092
  #   consumer:
  #     bootstrap-servers: service-kafka:9092

cbs-middleware:
  baseUrl : http://dev-cbs-middleware.fonenext-dev.10.13.194.202.nip.io
  admin.username : Admin
  admin.password : password
  client.api:
    key : Clinet2
    secret: secret
  date.format : yyyy-MM-dd

logging:
  config: logback-spring.xml
  pattern:
  # Logging pattern containing traceId and spanId; no longer provided through Sleuth by default
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

command:
  line:
    runner:
      enabled: false

customer-api:
  url: http://dev-customer-api.fonenext-dev.10.13.194.202.nip.io/api

aes:
  encryption:
    # 16 bytes IV
    initVector: RandomInitVector
    # 128 bit key
    key:  Bar12345Bar12345

server:
  servlet:
    context-path: /api
management:
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  tracing:
    enabled: true
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://service-zipkin-dev.fonenext-dev.svc.cluster.local:9411/api/v2/spans

origin:
  pfm: "*"

webclient:
  http:
    max:
      connections: 10
    client:
      connect-timeout-millis: 5000
      response-timeout-millis: 5000
      read-timeout-millis: 5000
      write-timeout-millis: 5000
    metrics:
      enable: true

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://bankxp:bankxp@edge-eureka1.10.13.134.14.nip.io/eureka, http://bankxp:bankxp@edge-eureka2.10.13.134.14.nip.io/eureka
  instance:
    preferIpAddress: true
    #    ipAddress: ${POD_IP}  # by this setting it is required to communicate over https only.
    nonSecurePortEnabled: true
    securePortEnabled: false
